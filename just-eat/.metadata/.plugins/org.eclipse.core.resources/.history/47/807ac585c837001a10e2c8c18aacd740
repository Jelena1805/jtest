package com.parcelpickupFrontEnd;



import java.io.IOException;
import java.util.List;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.annotations.*;

import com.sharedlibrary.Components;
import com.sharedlibrary.Helper;

import io.netty.util.internal.ThreadLocalRandom;

import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;



@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class AdminToolCrateOnDemandRequestTest {
	private static WebDriver driver;
	private static Helper helper;



	@BeforeClass
	@Parameters({ "browser" })
	public  void setUp(@Optional("chrome") String browser) throws Exception {
		helper = Helper.getInstance();
		driver = Helper.getDriver(browser);
		driver.manage().window().setSize(new Dimension(1360, 1000));
		System.out.println("Starting test " + new Object() {}.getClass().getEnclosingMethod().getName());

	}
	
	@Test
	private void regularCustomer() throws InterruptedException, IOException 
	{
		adminToolCrateOnDemandRequestTest();
		///helper.getProperty("erpCustomerNumber")
	}
	
	@Test
	private void rpoCustomer() throws InterruptedException, IOException 
	{
		adminToolCrateOnDemandRequestTest();
	}

	private void adminToolCrateOnDemandRequestTest(String customerNumber) throws InterruptedException, IOException {
		///logitn to admin tool
		Components.adminToolLogin(driver, customerNumber);
		helper.closeCookieBanner(driver);
		driver.findElement(By.id("createNewPickup")).click();
		Thread.sleep(2000);
		
		//Components.alternateAddress(driver, "K2K3N5");
		Components.instructions(driver);
		//// buton continue
		driver.findElement(By.id("contactSubmit")).click();
		Thread.sleep(2000);
		 WebElement backToSearch = helper.FindElementSafe(driver, By.id("backToSearchBtn"));
		Assert.assertNotEquals(null, backToSearch);
	//////Packing
		//////Packing
		//Quantity and weight >9999
		Components.packing(driver);
		//shiping services 
		Components.shipingServicesNoPayment(driver);
		//Submit page
		driver.findElement(By.id("packingSubmit")).click();	
		////date and time
		///Calendar
		Thread.sleep(5000);
		Components.onDemandPickuptime(driver);	
		////check is first time 6:00 am
		driver.findElement(By.id("datetimePickupTimeDropdown")).click();
		Thread.sleep(2000);
		List<WebElement> staringTimeList = driver.findElements(By.cssSelector("li[role=option]"));
		Object[] staringTimeArary = staringTimeList.toArray();
		String time_zero = ((WebElement) staringTimeArary[1]).getText();
		Assert.assertEquals("6:00 am", time_zero);
		driver.findElement(By.id("datetimePickupTimeDropdown")).click();
		//////
		driver.findElement(By.id("datetimeSubmit")).click();
		Thread.sleep(5000);
		backToSearch = helper.FindElementSafe(driver, By.id("backToSearchBtn"));
		Assert.assertNotEquals(null, backToSearch);
		driver.findElement(By.id("reviewSubmit")).click();
		Thread.sleep(10000);
		driver.switchTo().defaultContent();
		Thread.sleep(1000);
		String confirmation = driver.findElement(By.className("pickup-confirmation-number")).getText();
		String[] parts = confirmation.split(": ");
		String id = parts[1]; // 004
		
		///go to details
		driver.findElement(By.id("createRtnBtn")).click();
		Thread.sleep(3000);
		helper.closeCookieBanner(driver);
		WebElement createNew = helper.FindElementSafe(driver, By.className("create-new-pickup-button"));
		Assert.assertNotEquals(null, createNew);
		// app-input-1
		Thread.sleep(3000);
		///// click on request from list table-striped
		WebElement listveiw = driver.findElement(By.className("mytable"));
		listveiw.findElement(By.partialLinkText(id)).click();///// add id
			///check micro-rebook is presented 
		Thread.sleep(2000);
		 WebElement rebook = helper.FindElementSafe(driver, By.className("micro-rebook"));
		Assert.assertNotEquals(null, rebook);
					
	}
	

	
	
	

	@AfterClass
	public static void quitBrowser() throws Exception {
		helper.takeScreenshot(driver, "AdminToolCrateOnDemandRequestTest");
		driver.quit();
	}
}