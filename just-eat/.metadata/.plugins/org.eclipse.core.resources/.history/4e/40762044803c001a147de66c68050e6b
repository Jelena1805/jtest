package com.parcelpickupFrontEnd;



import java.time.LocalDate;
import java.util.List;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.*;
import org.testng.annotations.Test;
import org.testng.annotations.Parameters;
import org.testng.annotations.Optional;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

import com.sharedlibrary.Components;
import com.sharedlibrary.Helper;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)

public class Atrribute4and6Test {
	private static WebDriver driver;
	private static Helper helper;
	static String id ;

	@BeforeClass
	@Parameters({ "browser" })
	public static void setUp(@Optional("chrome") String browser) throws Exception {
		helper = Helper.getInstance();
		driver = Helper.getDriver(browser);
		driver.manage().window().setSize(new Dimension(1360, 1000));
		System.out.println("Starting test " + new Object() {}.getClass().getEnclosingMethod().getName());
		driver.navigate().to(helper.getProperty("stagingHome"));
		String user = "atribute4User";
		String password = "atribute4Password";
		String customerNum = helper.getProperty("erpCustomerNumber");
		//helper.pickupScheduledDelete(customerNum);
		String testName = "Starting test " + new Object() {}.getClass().getEnclosingMethod().getName();
		helper.signInCP(driver, user, password, testName);


	}

	@Test

	public void createScheduel() throws InterruptedException, java.text.ParseException {
		System.out.println("Starting test " + new Object() {
		}.getClass().getEnclosingMethod().getName());
		driver.navigate().to(helper.getProperty("parcelPickup"));
		helper.closeCookieBanner(driver);
		Thread.sleep(2000);
		Components.pickScheduled(driver);
		String msg = driver.findElement(By.className("alert-message-container")).findElement(By.tagName("p")).getText();
		Assert.assertEquals("Parcel pickup isn't available at this address. Please use an alternate address or visit a post office", msg);

	}

	@AfterClass
	public static void closeBrowser() throws Exception {
		helper.takeScreenshot(driver, "Atrribute4and6Test");
		driver.quit();
	}
}