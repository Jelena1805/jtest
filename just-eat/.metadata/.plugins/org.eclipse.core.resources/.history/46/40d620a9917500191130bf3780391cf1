package testsParcelPickup;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;
import main.java.Helper;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import java.util.concurrent.ThreadLocalRandom;


public class ScheduledPickupResumeDelete {
	private static Helper helper;

	
	@BeforeClass
	public static void setUp() throws Exception {
		helper = Helper.getInstance();
		System.out.println("Starting test " + new Object() {}.getClass().getEnclosingMethod().getName());
	}
	
	@Test
	public void scheduledResumeDelete() throws IOException, SQLException  {	
		Connection connection = null;
		connection = helper.connetToPURSEdb();	    
	    String query = "SELECT  MAX(request_key) AS a FROM pickup_request WHERE REQUEST_TYPE_KEY=1";
	    Statement stmt = null;
        stmt = connection.createStatement();
        ResultSet rs = stmt.executeQuery(query);
        int id=591;
        while(rs.next())
        {
        	 id = rs.getInt("a");
        	 
        }
        System.out.println("id is = "+id);
        String customerNumber = helper.get_customer_number(id);
        ////try to put on hold if it is not
        try
        {
            String url =helper.getProperty("ppstaging")+"/purs/"+customerNumber+"/pickuprequest/"+id+"/hold";         
            OkHttpClient client = new OkHttpClient();
            String json = "";
             RequestBody body = RequestBody.create(
          	      MediaType.parse("application/json; charset=utf-8"), json);
            Request request = new Request.Builder()
              .url(url)
              .post(body)
              .addHeader("Content-Type", "application/vnd.cpc.purs-v1+json")
              .addHeader("Accept", "application/vnd.cpc.purs-v1+json")
              .addHeader("cache-control", "no-cache")
              .addHeader("Postman-Token", "c9c203ed-3074-4022-89db-7de05f50157a")
              .build();

             Response response = client.newCall(request).execute();
        	  int responseCode = response.code();
         	String responseBody =  response.body().string();
         	System.out.println(responseBody);
         	if (responseBody.contains("The pickup request is not active."))
         	{
         		connection = helper.connetToPURSEdb();	
                query = "UPDATE request_status SET REQUEST_STATUS_TYPE_KEY = 2 WHERE REQUEST_KEY =" +id;
                stmt = connection.createStatement();
                ResultSet rs1 = stmt.executeQuery(query); 
                //// set date for today
                String startDate="2018-11-07";
                SimpleDateFormat sdf1 = new SimpleDateFormat("YYY-MM-DD");
                java.util.Date date = sdf1.parse(startDate);
                java.sql.Date sqlStartDate = new java.sql.Date(date.getTime());
                String query1 = "UPDATE REQUEST_SCHEDULE SET SCHEDULE_PICKUP_START_DATE ='" +sqlStartDate+"' WHERE REQUEST_KEY=" +id;
                System.out.println(query1);
                connection = null;
                connection = helper.connetToPURSEdb();	        
                stmt = connection.createStatement();
                rs1 = stmt.executeQuery(query1);
                /////put it on hold
                 url =helper.getProperty("ppstaging")+"/purs/"+customerNumber+"/pickuprequest/"+id+"/hold";         
                 client = new OkHttpClient();
                 json = "";
                  body = RequestBody.create(
              	      MediaType.parse("application/json; charset=utf-8"), json);
                 request = new Request.Builder()
                  .url(url)
                  .post(body)
                  .addHeader("Content-Type", "application/vnd.cpc.purs-v1+json")
                  .addHeader("Accept", "application/vnd.cpc.purs-v1+json")
                  .addHeader("cache-control", "no-cache")
                  .addHeader("Postman-Token", "c9c203ed-3074-4022-89db-7de05f50157a")
                  .build();

                  response = client.newCall(request).execute();
            	   responseCode = response.code();
             	 responseBody =  response.body().string();
             	System.out.println(responseBody);
         	}
        }
        
        catch (Exception e) {
			// TODO: handle exception
		}              
        /////////////////////////////////////////////////////        
        OkHttpClient client = new OkHttpClient();
        String url = helper.getProperty("ppstaging")+"/purs/"+customerNumber+"/pickuprequest/"+id+"/hold"  ;
        String json = "";
        RequestBody body = RequestBody.create(
      	      MediaType.parse("application/json; charset=utf-8"), json);
        Request request = new Request.Builder()
          .url(url)
          .delete(body)
          .addHeader("Content-Type", "application/vnd.cpc.purs-v1+json")
          .addHeader("Accept", "application/vnd.cpc.purs-v1+json")
          .addHeader("Cache-Control", "no-cache")
          .addHeader("Postman-Token", "e546a6d8-4931-4264-8c51-a5decea7ef2a")
          .build();
        
        Response response = client.newCall(request).execute();
    	int responseCode =  response.code();
    	String responseBody =  response.body().string(); 
    	System.out.println(responseBody);
    	Assert.assertEquals("Response Code",200, responseCode);  
	    Assert.assertNotEquals("Response body", "", responseBody);		    
		connection = null;
		connection = helper.connetToPURSEdb();	    
	     query = "select * from request_status where request_key ="+ id;
	     stmt = null;
        stmt = connection.createStatement();
         rs = stmt.executeQuery(query);
        String requestid ="";
        String pickuprecordstatus ="";
        while (rs.next()) {
        	int request_status_type_key = rs.getInt("REQUEST_STATUS_TYPE_KEY"); 
        	///////Assert.assertEquals("Canceled status is 3", 3, request_status_type_key); 
             // end date should be  today or tommorw 
        }	}
        

	
}
